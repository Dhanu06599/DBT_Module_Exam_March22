-- Section I

create table DEPT
(
DEPTNO int (2),
DNAME varchar (15),
LOC varchar (10)
);

desc DEPT;

insert into DEPT values
(10, 'ACCOUNTING', 'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30,'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

select * from dept;

create table EMP
(
EMPNO int(4),
ENAME varchar(10),
JOB varchar(9),
HIREDATE date,
SAL float(7,2),
COMM float(7,2),
DEPTNO int(2)
);

desc EMP;

insert into EMP values
(7839, 'KING', 'MANAGER', '1991-11-17', 5000, NULL, 10),
(7698, 'BLAKE', 'CLERK', '1981-05-01', 2850, NULL, 30),
(7782, 'CLARK', 'MANAGER', '1981-06-09', 2450, NULL, 10),
(7566, 'JONES', 'CLERK', '1981-04-02', 2975, NULL, 20),
(7654, 'MARTIN', 'SALESMAN', '1981-09-28', 1250, 1400, 30),
(7499, 'ALLEN', 'SALESMAN', '1981-02-20', 1600, 300, 30);

select * from emp;

-- Q3
select * from emp
where sal between 2500 and 5000;

-- Q4
select ename from emp
order by ename desc;

-- Q5
select lower(job) from emp;

-- Q6
select ename, length(ename) as length from emp;

-- Q7
select deptno, count(ename) as count from emp
group by deptno;

-- Q8
select d.dname, e.ename from emp
e inner join dept d on d.deptno = e.deptno;

-- Q9
select ename, position("AR" in ename ) as position from emp;

-- Q10
select sal, sal*0.2 "HRA" from emp;

commit;

-- Section II
-- Q1
create table TEMPP
(
string1 varchar (25),
string2 varchar (25),
Message varchar (50)
);

desc tempp;

drop procedure if exists PROC1;
delimiter //
create procedure PROC1 (string1 varchar (25), string2 varchar(25)) 
Begin
declare meassage varchar (50);
declare x int;
select locate (string1, string2) into x;
if x > 0 then
insert into tempp values (string1, string2, 'string1 exist inside string2');
else
insert into tempp values (string1, string2, 'string1 does not exist inside string2');
end if;
select * from tempp;
END;//
delimiter ;

call PROC1 ('DAC', 'CDAC');
CALL PROC1 ('SUN', 'MOON');
select * from tempp;

commit;
-- Q2

create table Tempp1
(
side1 int,
side2 int,
side3 int,
status varchar (10)
);


desc tempp1;
drop function if exists FUNC1;
delimiter //
 create function FUNC1 (side1 int, side2 int, side3 int)
 returns varchar(100)
 deterministic
 begin
 if side1 + side > side3 and side2 + side3 > side1 and side1 + side3 > side2 then 
 return 'TRUE';
 else
 return 'FALSE';
 end if;
 end;//
 delimiter ;

call FUNC1 (1,5,6);